// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum Role {
  MANAGER
  CASHIER
}

enum Category {
  MAKANAN 
  MINUMAN 
  SNACK
}

enum Payment {
  CASH 
  QRIS
}

enum Status {
  NEW 
  PAID 
  DONE 
}

model User {
  id              Int      @id @default(autoincrement())
  uuid            String   @unique @default("")
  name            String   @default("")
  email           String   @unique @default("")
  password        String   @default("")
  profile_picture String   @default("")
  role            Role     @default(CASHIER)
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  orderDetail     Order[]
}

model Menu {
  id          Int        @id @default(autoincrement())
  uuid        String     @unique @default("")
  name        String     @default("")
  price       Int        @default(0)
  category    Category   @default(MAKANAN)
  picture     String     @default("")
  description String     @default("") @db.Text
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  orderList   OrderList[]
}

model Order {
  id             Int        @id @default(autoincrement())
  uuid           String     @unique @default("")
  customer       String     @default("")
  table_number   String     @default("")
  totalPrice     Int        @default(0)
  payment_method Payment    @default(CASH)
  status         Status     @default(NEW)
  createdAt      DateTime   @default(now())
  updatedAt      DateTime   @updatedAt
  orderList      OrderList[]
  userId         Int?
  user           User?      @relation(fields: [userId], references: [id])
}

model OrderList {
  id         Int      @id @default(autoincrement())
  uuid       String   @unique @default("")
  idOrder    Int?     
  order      Order?   @relation(fields: [idOrder], references: [id])
  idMenu     Int? 
  quantity   Int      @default(0)
  menu       Menu?    @relation(fields: [idMenu], references: [id])
  note       String   @default("") @db.Text
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}